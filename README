# NixShell Configurations

This repository contains a set of NixShell configurations for different development environments. These configurations are designed to be isolated from each other to prevent conflicts when switching between environments. Each NixShell configuration provides a consistent and reproducible development environment for its respective technology stack.

## Table of Contents

- [Introduction](#introduction)
- [Configurations](#configurations)
  - [Node.js with Angular and Nest.js](#nodejs-with-angular-and-nestjs)
- [Getting Started](#getting-started)
- [Usage](#usage)
- [Contributing](#contributing)
- [License](#license)

## Introduction

This repository aims to simplify development environment setup by providing isolated NixShell configurations for different technology stacks. You can quickly switch between environments without worrying about conflicts between packages or dependencies.


### Node.js with Angular and Nest.js

- Description: Development environment for Node.js with Angular frontend and Nest.js backend.
- [Link to Configuration](./node/node-angular-nest)

### Docker

- Description: Create Docker files and docker compose and run it.
- [Link to Configuration](./docker)

### PostgreSQL

- Description: Create Docker files and docker compose and run it.
- [Link to Configuration](./database/postgresql)


## Getting Started

Before you begin, ensure that you have the Nix Package Manager installed on your computer. If not, you can install it by following the instructions [here](https://nixos.org/).

## Usage

1. Choose the configuration that corresponds to your desired development environment from the `configurations` directory.

2. Navigate to the selected configuration's directory.

3. Run the following command to activate the NixShell for your chosen environment:

```
nix-shell
```

This will provide you with an isolated development environment containing all the required packages and dependencies.

## Contributing

We welcome contributions to this repository. To add a new NixShell configuration, follow these steps:

1. Fork this repository.

2. Create a new folder for your configuration within the `configurations` directory.

3. Place your NixShell configuration file inside the new folder.

4. Update the README to include details about your configuration in the "Configurations" section.

5. Create a pull request to merge your changes into the main repository.

## License

This project is open-source and available under the [LICENSE NAME] license. For more details, please refer to the [LICENSE.md](LICENSE.md) file.

